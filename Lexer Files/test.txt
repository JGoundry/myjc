< ERR, , 3 >
< ID, This, 3 >
< ID, file, 3 >
< ID, is, 3 >
< ID, part, 3 >
< ID, of, 3 >
< ID, www, 3 >
< SYMBOL, ., 3 >
< ID, nand2tetris, 3 >
< SYMBOL, ., 3 >
< ID, org, 3 >
< RESWORD, class, 3 >
< ID, Ball, 3 >
< SYMBOL, {, 3 >
< ID, field, 3 >
< RESWORD, int, 3 >
< ID, x, 3 >
< SYMBOL, ,, 3 >
< ID, y, 3 >
< SYMBOL, ;, 3 >
< ID, field, 3 >
< RESWORD, int, 3 >
< ID, lengthx, 3 >
< SYMBOL, ,, 3 >
< ID, lengthy, 3 >
< SYMBOL, ;, 3 >
< ID, field, 3 >
< RESWORD, int, 3 >
< ID, d, 3 >
< SYMBOL, ,, 3 >
< ID, straightD, 3 >
< SYMBOL, ,, 3 >
< ID, diagonalD, 3 >
< SYMBOL, ;, 3 >
< ID, field, 3 >
< RESWORD, boolean, 3 >
< ID, invert, 3 >
< SYMBOL, ,, 3 >
< ID, positivex, 3 >
< SYMBOL, ,, 3 >
< ID, positivey, 3 >
< SYMBOL, ;, 3 >
< ID, field, 3 >
< RESWORD, int, 3 >
< ID, leftWall, 3 >
< SYMBOL, ,, 3 >
< ID, rightWall, 3 >
< SYMBOL, ,, 3 >
< ID, topWall, 3 >
< SYMBOL, ,, 3 >
< ID, bottomWall, 3 >
< SYMBOL, ;, 3 >
< ID, field, 3 >
< RESWORD, int, 3 >
< ID, wall, 3 >
< SYMBOL, ;, 3 >
< RESWORD, constructor, 3 >
< ID, Ball, 3 >
< ID, new, 3 >
< SYMBOL, (, 3 >
< RESWORD, int, 3 >
< ID, Ax, 3 >
< SYMBOL, ,, 3 >
< RESWORD, int, 3 >
< ID, Ay, 3 >
< SYMBOL, ,, 3 >
< RESWORD, int, 3 >
< ID, AleftWall, 3 >
< SYMBOL, ,, 3 >
< RESWORD, int, 3 >
< ID, ArightWall, 3 >
< SYMBOL, ,, 3 >
< RESWORD, int, 3 >
< ID, AtopWall, 3 >
< SYMBOL, ,, 3 >
< RESWORD, int, 3 >
< ID, AbottomWall, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, x, 3 >
< SYMBOL, =, 3 >
< ID, Ax, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, y, 3 >
< SYMBOL, =, 3 >
< ID, Ay, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, leftWall, 3 >
< SYMBOL, =, 3 >
< ID, AleftWall, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, rightWall, 3 >
< SYMBOL, =, 3 >
< ID, ArightWall, 3 >
< SYMBOL, -, 3 >
< INT, 6, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, topWall, 3 >
< SYMBOL, =, 3 >
< ID, AtopWall, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, bottomWall, 3 >
< SYMBOL, =, 3 >
< ID, AbottomWall, 3 >
< SYMBOL, -, 3 >
< INT, 6, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, wall, 3 >
< SYMBOL, =, 3 >
< INT, 0, 3 >
< SYMBOL, ;, 3 >
< RESWORD, do, 3 >
< ID, show, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< ID, return, 3 >
< ID, this, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, method, 3 >
< ID, void, 3 >
< ID, dispose, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, do, 3 >
< ID, Memory, 3 >
< SYMBOL, ., 3 >
< ID, deAlloc, 3 >
< SYMBOL, (, 3 >
< ID, this, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< ID, return, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, method, 3 >
< ID, void, 3 >
< ID, show, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, do, 3 >
< ID, Screen, 3 >
< SYMBOL, ., 3 >
< ID, setColor, 3 >
< SYMBOL, (, 3 >
< RESWORD, true, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< RESWORD, do, 3 >
< ID, draw, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< ID, return, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, method, 3 >
< ID, void, 3 >
< ID, hide, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, do, 3 >
< ID, Screen, 3 >
< SYMBOL, ., 3 >
< ID, setColor, 3 >
< SYMBOL, (, 3 >
< RESWORD, false, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< RESWORD, do, 3 >
< ID, draw, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< ID, return, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, method, 3 >
< ID, void, 3 >
< ID, draw, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, do, 3 >
< ID, Screen, 3 >
< SYMBOL, ., 3 >
< ID, drawRectangle, 3 >
< SYMBOL, (, 3 >
< ID, x, 3 >
< SYMBOL, ,, 3 >
< ID, y, 3 >
< SYMBOL, ,, 3 >
< ID, x, 3 >
< SYMBOL, +, 3 >
< INT, 5, 3 >
< SYMBOL, ,, 3 >
< ID, y, 3 >
< SYMBOL, +, 3 >
< INT, 5, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< ID, return, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, method, 3 >
< RESWORD, int, 3 >
< ID, getLeft, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< ID, return, 3 >
< ID, x, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, method, 3 >
< RESWORD, int, 3 >
< ID, getRight, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< ID, return, 3 >
< ID, x, 3 >
< SYMBOL, +, 3 >
< INT, 5, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, method, 3 >
< ID, void, 3 >
< ID, setDestination, 3 >
< SYMBOL, (, 3 >
< RESWORD, int, 3 >
< ID, destx, 3 >
< SYMBOL, ,, 3 >
< RESWORD, int, 3 >
< ID, desty, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, var, 3 >
< RESWORD, int, 3 >
< ID, dx, 3 >
< SYMBOL, ,, 3 >
< ID, dy, 3 >
< SYMBOL, ,, 3 >
< ID, temp, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, lengthx, 3 >
< SYMBOL, =, 3 >
< ID, destx, 3 >
< SYMBOL, -, 3 >
< ID, x, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, lengthy, 3 >
< SYMBOL, =, 3 >
< ID, desty, 3 >
< SYMBOL, -, 3 >
< ID, y, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, dx, 3 >
< SYMBOL, =, 3 >
< ID, Math, 3 >
< SYMBOL, ., 3 >
< ID, abs, 3 >
< SYMBOL, (, 3 >
< ID, lengthx, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, dy, 3 >
< SYMBOL, =, 3 >
< ID, Math, 3 >
< SYMBOL, ., 3 >
< ID, abs, 3 >
< SYMBOL, (, 3 >
< ID, lengthy, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, invert, 3 >
< SYMBOL, =, 3 >
< SYMBOL, (, 3 >
< ID, dx, 3 >
< SYMBOL, <, 3 >
< ID, dy, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< ID, invert, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, temp, 3 >
< SYMBOL, =, 3 >
< ID, dx, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, dx, 3 >
< SYMBOL, =, 3 >
< ID, dy, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, dy, 3 >
< SYMBOL, =, 3 >
< ID, temp, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, positivex, 3 >
< SYMBOL, =, 3 >
< SYMBOL, (, 3 >
< ID, y, 3 >
< SYMBOL, <, 3 >
< ID, desty, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, positivey, 3 >
< SYMBOL, =, 3 >
< SYMBOL, (, 3 >
< ID, x, 3 >
< SYMBOL, <, 3 >
< ID, destx, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, else, 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, positivex, 3 >
< SYMBOL, =, 3 >
< SYMBOL, (, 3 >
< ID, x, 3 >
< SYMBOL, <, 3 >
< ID, destx, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, positivey, 3 >
< SYMBOL, =, 3 >
< SYMBOL, (, 3 >
< ID, y, 3 >
< SYMBOL, <, 3 >
< ID, desty, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, let, 3 >
< ID, d, 3 >
< SYMBOL, =, 3 >
< SYMBOL, (, 3 >
< INT, 2, 3 >
< SYMBOL, *, 3 >
< ID, dy, 3 >
< SYMBOL, ), 3 >
< SYMBOL, -, 3 >
< ID, dx, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, straightD, 3 >
< SYMBOL, =, 3 >
< INT, 2, 3 >
< SYMBOL, *, 3 >
< ID, dy, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, diagonalD, 3 >
< SYMBOL, =, 3 >
< INT, 2, 3 >
< SYMBOL, *, 3 >
< SYMBOL, (, 3 >
< ID, dy, 3 >
< SYMBOL, -, 3 >
< ID, dx, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< ID, return, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, method, 3 >
< RESWORD, int, 3 >
< ID, move, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, do, 3 >
< ID, hide, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< ID, d, 3 >
< SYMBOL, <, 3 >
< INT, 0, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, d, 3 >
< SYMBOL, =, 3 >
< ID, d, 3 >
< SYMBOL, +, 3 >
< ID, straightD, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, else, 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, d, 3 >
< SYMBOL, =, 3 >
< ID, d, 3 >
< SYMBOL, +, 3 >
< ID, diagonalD, 3 >
< SYMBOL, ;, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< ID, positivey, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< ID, invert, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, x, 3 >
< SYMBOL, =, 3 >
< ID, x, 3 >
< SYMBOL, +, 3 >
< INT, 4, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, else, 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, y, 3 >
< SYMBOL, =, 3 >
< ID, y, 3 >
< SYMBOL, +, 3 >
< INT, 4, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< SYMBOL, }, 3 >
< RESWORD, else, 3 >
< SYMBOL, {, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< ID, invert, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, x, 3 >
< SYMBOL, =, 3 >
< ID, x, 3 >
< SYMBOL, -, 3 >
< INT, 4, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, else, 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, y, 3 >
< SYMBOL, =, 3 >
< ID, y, 3 >
< SYMBOL, -, 3 >
< INT, 4, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< SYMBOL, }, 3 >
< SYMBOL, }, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< ID, positivex, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< ID, invert, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, y, 3 >
< SYMBOL, =, 3 >
< ID, y, 3 >
< SYMBOL, +, 3 >
< INT, 4, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, else, 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, x, 3 >
< SYMBOL, =, 3 >
< ID, x, 3 >
< SYMBOL, +, 3 >
< INT, 4, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< SYMBOL, }, 3 >
< RESWORD, else, 3 >
< SYMBOL, {, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< ID, invert, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, y, 3 >
< SYMBOL, =, 3 >
< ID, y, 3 >
< SYMBOL, -, 3 >
< INT, 4, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, else, 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, x, 3 >
< SYMBOL, =, 3 >
< ID, x, 3 >
< SYMBOL, -, 3 >
< INT, 4, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< SYMBOL, }, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ~, 3 >
< SYMBOL, (, 3 >
< ID, x, 3 >
< SYMBOL, >, 3 >
< ID, leftWall, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, wall, 3 >
< SYMBOL, =, 3 >
< INT, 1, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, x, 3 >
< SYMBOL, =, 3 >
< ID, leftWall, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ~, 3 >
< SYMBOL, (, 3 >
< ID, x, 3 >
< SYMBOL, <, 3 >
< ID, rightWall, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, wall, 3 >
< SYMBOL, =, 3 >
< INT, 2, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, x, 3 >
< SYMBOL, =, 3 >
< ID, rightWall, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ~, 3 >
< SYMBOL, (, 3 >
< ID, y, 3 >
< SYMBOL, >, 3 >
< ID, topWall, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, wall, 3 >
< SYMBOL, =, 3 >
< INT, 3, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, y, 3 >
< SYMBOL, =, 3 >
< ID, topWall, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ~, 3 >
< SYMBOL, (, 3 >
< ID, y, 3 >
< SYMBOL, <, 3 >
< ID, bottomWall, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, wall, 3 >
< SYMBOL, =, 3 >
< INT, 4, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, y, 3 >
< SYMBOL, =, 3 >
< ID, bottomWall, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, do, 3 >
< ID, show, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< ID, return, 3 >
< ID, wall, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, method, 3 >
< ID, void, 3 >
< ID, bounce, 3 >
< SYMBOL, (, 3 >
< RESWORD, int, 3 >
< ID, bouncingDirection, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, var, 3 >
< RESWORD, int, 3 >
< ID, newx, 3 >
< SYMBOL, ,, 3 >
< ID, newy, 3 >
< SYMBOL, ,, 3 >
< ID, divLengthx, 3 >
< SYMBOL, ,, 3 >
< ID, divLengthy, 3 >
< SYMBOL, ,, 3 >
< ID, factor, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, divLengthx, 3 >
< SYMBOL, =, 3 >
< ID, lengthx, 3 >
< INT, 10, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, divLengthy, 3 >
< SYMBOL, =, 3 >
< ID, lengthy, 3 >
< INT, 10, 3 >
< SYMBOL, ;, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< ID, bouncingDirection, 3 >
< SYMBOL, =, 3 >
< INT, 0, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, factor, 3 >
< SYMBOL, =, 3 >
< INT, 10, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, else, 3 >
< SYMBOL, {, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< SYMBOL, (, 3 >
< SYMBOL, (, 3 >
< SYMBOL, ~, 3 >
< SYMBOL, (, 3 >
< ID, lengthx, 3 >
< SYMBOL, <, 3 >
< INT, 0, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ), 3 >
< SYMBOL, &, 3 >
< SYMBOL, (, 3 >
< ID, bouncingDirection, 3 >
< SYMBOL, =, 3 >
< INT, 1, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ), 3 >
< SYMBOL, |, 3 >
< SYMBOL, (, 3 >
< SYMBOL, (, 3 >
< ID, lengthx, 3 >
< SYMBOL, <, 3 >
< INT, 0, 3 >
< SYMBOL, ), 3 >
< SYMBOL, &, 3 >
< SYMBOL, (, 3 >
< ID, bouncingDirection, 3 >
< SYMBOL, =, 3 >
< SYMBOL, (, 3 >
< SYMBOL, -, 3 >
< INT, 1, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ), 3 >
< SYMBOL, ), 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, factor, 3 >
< SYMBOL, =, 3 >
< INT, 20, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, else, 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, factor, 3 >
< SYMBOL, =, 3 >
< INT, 5, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< SYMBOL, }, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< ID, wall, 3 >
< SYMBOL, =, 3 >
< INT, 1, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, newx, 3 >
< SYMBOL, =, 3 >
< INT, 506, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, newy, 3 >
< SYMBOL, =, 3 >
< SYMBOL, (, 3 >
< ID, divLengthy, 3 >
< SYMBOL, *, 3 >
< SYMBOL, (, 3 >
< SYMBOL, -, 3 >
< INT, 50, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ), 3 >
< ID, divLengthx, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, newy, 3 >
< SYMBOL, =, 3 >
< ID, y, 3 >
< SYMBOL, +, 3 >
< SYMBOL, (, 3 >
< ID, newy, 3 >
< SYMBOL, *, 3 >
< ID, factor, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, else, 3 >
< SYMBOL, {, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< ID, wall, 3 >
< SYMBOL, =, 3 >
< INT, 2, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, newx, 3 >
< SYMBOL, =, 3 >
< INT, 0, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, newy, 3 >
< SYMBOL, =, 3 >
< SYMBOL, (, 3 >
< ID, divLengthy, 3 >
< SYMBOL, *, 3 >
< INT, 50, 3 >
< SYMBOL, ), 3 >
< ID, divLengthx, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, newy, 3 >
< SYMBOL, =, 3 >
< ID, y, 3 >
< SYMBOL, +, 3 >
< SYMBOL, (, 3 >
< ID, newy, 3 >
< SYMBOL, *, 3 >
< ID, factor, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, else, 3 >
< SYMBOL, {, 3 >
< RESWORD, if, 3 >
< SYMBOL, (, 3 >
< ID, wall, 3 >
< SYMBOL, =, 3 >
< INT, 3, 3 >
< SYMBOL, ), 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, newy, 3 >
< SYMBOL, =, 3 >
< INT, 250, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, newx, 3 >
< SYMBOL, =, 3 >
< SYMBOL, (, 3 >
< ID, divLengthx, 3 >
< SYMBOL, *, 3 >
< SYMBOL, (, 3 >
< SYMBOL, -, 3 >
< INT, 25, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ), 3 >
< ID, divLengthy, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, newx, 3 >
< SYMBOL, =, 3 >
< ID, x, 3 >
< SYMBOL, +, 3 >
< SYMBOL, (, 3 >
< ID, newx, 3 >
< SYMBOL, *, 3 >
< ID, factor, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< RESWORD, else, 3 >
< SYMBOL, {, 3 >
< RESWORD, let, 3 >
< ID, newy, 3 >
< SYMBOL, =, 3 >
< INT, 0, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, newx, 3 >
< SYMBOL, =, 3 >
< SYMBOL, (, 3 >
< ID, divLengthx, 3 >
< SYMBOL, *, 3 >
< INT, 25, 3 >
< SYMBOL, ), 3 >
< ID, divLengthy, 3 >
< SYMBOL, ;, 3 >
< RESWORD, let, 3 >
< ID, newx, 3 >
< SYMBOL, =, 3 >
< ID, x, 3 >
< SYMBOL, +, 3 >
< SYMBOL, (, 3 >
< ID, newx, 3 >
< SYMBOL, *, 3 >
< ID, factor, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< SYMBOL, }, 3 >
< SYMBOL, }, 3 >
< RESWORD, do, 3 >
< ID, setDestination, 3 >
< SYMBOL, (, 3 >
< ID, newx, 3 >
< SYMBOL, ,, 3 >
< ID, newy, 3 >
< SYMBOL, ), 3 >
< SYMBOL, ;, 3 >
< ID, return, 3 >
< SYMBOL, ;, 3 >
< SYMBOL, }, 3 >
< SYMBOL, }, 3 >
